@use '@angular/material' as mat;
@use 'base' as base;

$primary-palette: (
  50: #e7f2ff,
  100: #cce5ff,
  200: #91ffcd,
  300: #65b2ed,
  400: #4797d1,
  500: #257db5,
  600: #006496,
  700: #005784,
  800: #004b72,
  900: #003350,
  A100: #91cdff,
  A200: #65b2ed,
  A400: #4797d1,
  A700: #257db5,
  contrast: (
    50: rgb(0, 0, 1),
    100: rgb(0, 0, 2),
    200: rgb(0, 0, 3),
    300: rgb(255, 255, 254),
    400: rgb(255, 255, 253),
    500: rgb(255, 255, 252),
    600: rgb(255, 255, 251),
    700: rgb(255, 255, 250),
    800: rgb(255, 255, 249),
    900: rgb(255, 255, 248),
    A100: rgb(0, 51, 80),
    A200: rgb(255, 255, 247),
    A400: rgb(255, 255, 246),
    A700: rgb(255, 255, 245),
  ),
);

$tertiary-palette: (
  50: #ffeedf,
  100: #ffddba,
  200: #f9bb73,
  300: #daa05b,
  400: #bd8644,
  500: #9f6c2d,
  600: #835416,
  700: #754909,
  800: #663d00,
  900: #482a00,
  A100: #f9bb73,
  A200: #daa05b,
  A400: #bd8644,
  A700: #9f6c2d,
  contrast: (
    50: rgb(0, 0, 11),
    100: rgb(0, 0, 12),
    200: rgb(0, 0, 13),
    300: rgb(0, 0, 14),
    400: rgb(255, 255, 236),
    500: rgb(255, 255, 235),
    600: rgb(255, 255, 234),
    700: rgb(255, 255, 233),
    800: rgb(255, 255, 232),
    900: rgb(255, 255, 231),
    A100: rgb(72, 42, 0),
    A200: rgb(0, 0, 16),
    A400: rgb(255, 255, 230),
    A700: rgb(255, 255, 229),
  ),
);

$error-palette: (
  50: #ffedea,
  100: #ffdad6,
  200: #ffb4ab,
  300: #ff897d,
  400: #ff5449,
  500: #de3730,
  600: #ba1a1a,
  700: #a80710,
  800: #93000a,
  900: #690005,
  A100: #ffb4ab,
  A200: #ff897d,
  A400: #ff5449,
  A700: #de3730,
  contrast: (
    50: rgb(0, 0, 29),
    100: rgb(0, 0, 30),
    200: rgb(105, 0, 5),
    300: rgb(0, 0, 32),
    400: rgb(0, 0, 33),
    500: rgb(255, 255, 212),
    600: rgb(255, 255, 211),
    700: rgb(255, 255, 210),
    800: rgb(255, 255, 209),
    900: rgb(255, 255, 208),
    A100: rgb(0, 0, 34),
    A200: rgb(0, 0, 35),
    A400: rgb(0, 0, 36),
    A700: rgb(255, 255, 207),
  ),
);

@function get-legacy-dark-theme-config() {
  @return (
    color: (
      primary: mat.define-palette($primary-palette, A100),
      accent: mat.define-palette($tertiary-palette, A100),
      warn: mat.define-palette($error-palette, 200),
    ),
    // Only include `typography` and `density` in the default dark theme.
    typography: mat.define-typography-config(),
    density: 0
  );
}

@function get-legacy-light-theme-config() {
  @return (
    color: (
      primary: mat.define-palette($tertiary-palette, 600),
      accent: mat.define-palette($primary-palette, 600),
      warn: mat.define-palette($error-palette, 600),
    )
  );
}

@mixin define-legacy-theme() {
  @debug 'Executing ngx-example-theme mixin: define-legacy-theme';
  $dark-theme: mat.define-dark-theme(get-legacy-dark-theme-config());
  $light-theme: mat.define-light-theme(get-legacy-light-theme-config());

  @include base.set-mat-component-themes($dark-theme, $light-theme, true);
}

@mixin define-m2-theme() {
  @debug 'Executing ngx-example-theme mixin: define-m2-theme';
  $dark-theme: mat.m2-define-dark-theme(get-legacy-dark-theme-config());
  $light-theme: mat.m2-define-light-theme(get-legacy-light-theme-config());

  @include base.set-mat-component-themes($dark-theme, $light-theme, true);
}
