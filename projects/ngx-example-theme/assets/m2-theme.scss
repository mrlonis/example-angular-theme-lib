@use '@angular/material' as mat;
@use 'base' as base;

$primary-palette: (
  50: #e7f2ff,
  100: #cce5ff,
  200: #91ffcd,
  300: #65b2ed,
  400: #4797d1,
  500: #257db5,
  600: #006496,
  700: #005784,
  800: #004b72,
  900: #003350,
  A100: #91cdff,
  A200: #65b2ed,
  A400: #4797d1,
  A700: #257db5,
  contrast: (
    50: rgb(0, 0, 1),
    100: rgb(0, 0, 2),
    200: rgb(0, 0, 3),
    300: rgb(255, 255, 254),
    400: rgb(255, 255, 253),
    500: rgb(255, 255, 252),
    600: rgb(255, 255, 251),
    700: rgb(255, 255, 250),
    800: rgb(255, 255, 249),
    900: rgb(255, 255, 248),
    A100: rgb(0, 51, 80),
    A200: rgb(255, 255, 247),
    A400: rgb(255, 255, 246),
    A700: rgb(255, 255, 245),
  ),
);

$secondary-palette: (
  50: #edf1f5,
  100: #dfe3e7,
  200: #c3c7cb,
  300: #a7acb0,
  400: #8d9195,
  500: #73787b,
  600: #5a5f62,
  700: #4e5356,
  800: #43474b,
  900: #2c3134,
  A100: #c3c7cb,
  A200: #a7acb0,
  A400: #8d9195,
  A700: #73787b,
  contrast: (
    50: rgb(0, 0, 5),
    100: rgb(0, 0, 6),
    200: rgb(0, 0, 7),
    300: rgb(0, 0, 8),
    400: rgb(255, 255, 244),
    500: rgb(255, 255, 243),
    600: rgb(255, 255, 242),
    700: rgb(255, 255, 241),
    800: rgb(255, 255, 240),
    900: rgb(255, 255, 239),
    A100: rgb(0, 0, 9),
    A200: rgb(0, 0, 10),
    A400: rgb(255, 255, 238),
    A700: rgb(255, 255, 237),
  ),
);

$tertiary-palette: (
  50: #ffeedf,
  100: #ffddba,
  200: #f9bb73,
  300: #daa05b,
  400: #bd8644,
  500: #9f6c2d,
  600: #835416,
  700: #754909,
  800: #663d00,
  900: #482a00,
  A100: #f9bb73,
  A200: #daa05b,
  A400: #bd8644,
  A700: #9f6c2d,
  contrast: (
    50: rgb(0, 0, 11),
    100: rgb(0, 0, 12),
    200: rgb(0, 0, 13),
    300: rgb(0, 0, 14),
    400: rgb(255, 255, 236),
    500: rgb(255, 255, 235),
    600: rgb(255, 255, 234),
    700: rgb(255, 255, 233),
    800: rgb(255, 255, 232),
    900: rgb(255, 255, 231),
    A100: rgb(72, 42, 0),
    A200: rgb(0, 0, 16),
    A400: rgb(255, 255, 230),
    A700: rgb(255, 255, 229),
  ),
);

$neutral-palette: (
  50: #eff1f6,
  100: #e0e2e7,
  200: #c4c7cb,
  300: #a9abb0,
  400: #8e9196,
  500: #74777c,
  600: #5b5f63,
  700: #4f5357,
  800: #44474b,
  900: #2d3135,
  A100: #c4c7cb,
  A200: #a9abb0,
  A400: #8e9196,
  A700: #74777c,
  contrast: (
    50: rgb(0, 0, 17),
    100: rgb(0, 0, 18),
    200: rgb(0, 0, 19),
    300: rgb(0, 0, 20),
    400: rgb(255, 255, 228),
    500: rgb(255, 255, 227),
    600: rgb(255, 255, 226),
    700: rgb(255, 255, 225),
    800: rgb(255, 255, 224),
    900: rgb(255, 255, 223),
    A100: rgb(0, 0, 21),
    A200: rgb(0, 0, 22),
    A400: rgb(255, 255, 222),
    A700: rgb(255, 255, 221),
  ),
);

$neutral-variant-palette: (
  50: #eaf1fb,
  100: #dce3ed,
  200: #c0c7d1,
  300: #a4acb5,
  400: #8a919a,
  500: #707880,
  600: #575f67,
  700: #4c535b,
  800: #40484f,
  900: #2a3139,
  A100: #c0c7d1,
  A200: #a4acb5,
  A400: #8a919a,
  A700: #707880,
  contrast: (
    50: rgb(0, 0, 23),
    100: rgb(0, 0, 24),
    200: rgb(0, 0, 25),
    300: rgb(0, 0, 26),
    400: rgb(255, 255, 220),
    500: rgb(255, 255, 219),
    600: rgb(255, 255, 218),
    700: rgb(255, 255, 217),
    800: rgb(255, 255, 216),
    900: rgb(255, 255, 215),
    A100: rgb(0, 0, 27),
    A200: rgb(0, 0, 28),
    A400: rgb(255, 255, 214),
    A700: rgb(255, 255, 213),
  ),
);

$error-palette: (
  50: #ffedea,
  100: #ffdad6,
  200: #ffb4ab,
  300: #ff897d,
  400: #ff5449,
  500: #de3730,
  600: #ba1a1a,
  700: #a80710,
  800: #93000a,
  900: #690005,
  A100: #ffb4ab,
  A200: #ff897d,
  A400: #ff5449,
  A700: #de3730,
  contrast: (
    50: rgb(0, 0, 29),
    100: rgb(0, 0, 30),
    200: rgb(105, 0, 5),
    300: rgb(0, 0, 32),
    400: rgb(0, 0, 33),
    500: rgb(255, 255, 212),
    600: rgb(255, 255, 211),
    700: rgb(255, 255, 210),
    800: rgb(255, 255, 209),
    900: rgb(255, 255, 208),
    A100: rgb(0, 0, 34),
    A200: rgb(0, 0, 35),
    A400: rgb(0, 0, 36),
    A700: rgb(255, 255, 207),
  ),
);

@function get-legacy-dark-theme-config() {
  @return (
    color: (
      primary: mat.define-palette($primary-palette, A100),
      accent: mat.define-palette($tertiary-palette, A100),
      warn: mat.define-palette($error-palette, 200),
    ),
    // Only include `typography` and `density` in the default dark theme.
    typography: mat.define-typography-config(),
    density: 0
  );
}

@function get-legacy-light-theme-config() {
  @return (
    color: (
      primary: mat.define-palette($tertiary-palette, 600),
      accent: mat.define-palette($primary-palette, 600),
      warn: mat.define-palette($error-palette, 600),
    )
  );
}

@mixin define-legacy-theme() {
  @debug 'Executing ngx-example-theme mixin: define-legacy-theme';
  $dark-theme: mat.define-dark-theme(get-legacy-dark-theme-config());
  $light-theme: mat.define-light-theme(get-legacy-light-theme-config());

  @include base.set-mat-component-themes($dark-theme, $light-theme);
}

@mixin define-m2-theme() {
  @debug 'Executing ngx-example-theme mixin: define-m2-theme';
  $dark-theme: mat.m2-define-dark-theme(get-legacy-dark-theme-config());
  $light-theme: mat.m2-define-light-theme(get-legacy-light-theme-config());

  @include base.set-mat-component-themes($dark-theme, $light-theme);
}
