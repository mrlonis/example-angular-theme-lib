{
  "root": true,
  "ignorePatterns": ["projects/**/*"],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": ["tsconfig.app.json", "tsconfig.spec.json", "tsconfig.json", "cypress/tsconfig.json"]
      }
    }
  },
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": true,
        "tsconfigRootDir": "."
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended-type-checked",
        // "plugin:@typescript-eslint/strict-type-checked",
        "plugin:@typescript-eslint/stylistic-type-checked",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:depend/recommended",
        "prettier",
        "plugin:prettier/recommended"
      ],
      "rules": {
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/prefer-standalone": "error",
        "@angular-eslint/sort-lifecycle-methods": "error",
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "Promise": "Promise is not allowed, use Observable instead"
            }
          }
        ],
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_",
            "varsIgnorePattern": "^_",
            "caughtErrorsIgnorePattern": "^_"
          }
        ],
        "import/newline-after-import": ["error", { "count": 1 }],
        "import/no-absolute-path": "error",
        "import/no-cycle": "error",
        "import/no-deprecated": "error",
        "import/no-self-import": "error",
        "import/no-unresolved": "error",
        "import/no-useless-path-segments": [
          "error",
          {
            "noUselessIndex": true,
            "commonjs": true
          }
        ],
        "import/order": [
          "error",
          {
            "alphabetize": {
              "order": "asc",
              "caseInsensitive": false
            },
            "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
            "newlines-between": "never"
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "extends": [
        "plugin:@angular-eslint/template/recommended",
        "plugin:@angular-eslint/template/accessibility",
        "prettier",
        "plugin:prettier/recommended"
      ],
      "rules": {
        "@angular-eslint/template/no-duplicate-attributes": "error",
        "@angular-eslint/template/prefer-control-flow": "error",
        "@angular-eslint/template/prefer-self-closing-tags": "error"
      }
    }
  ]
}
